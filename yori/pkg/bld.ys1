setlocal

REM
REM Determine architecture by looking at compiler output.
REM

set ARCH=win32
cl /? 2>&1 | findstr /C:"for x64" >NUL 2>&1
if intcmp %ERRORLEVEL%==0;set ARCH=amd64
cl /? 2>&1 | findstr /C:"for AMD64" >NUL 2>&1
if intcmp %ERRORLEVEL%==0;set ARCH=amd64
cl /? 2>&1 | findstr /C:"for ARM" >NUL 2>&1
if intcmp %ERRORLEVEL%==0;set ARCH=arm
cl /? 2>&1 | findstr /C:"for ARM64" >NUL 2>&1
if intcmp %ERRORLEVEL%==0;set ARCH=arm64
cl /? 2>&1 | findstr /C:"for MIPS" >NUL 2>&1
if intcmp %ERRORLEVEL%==0;set ARCH=mips
cl /? 2>&1 | findstr /C:"for PowerPC" >NUL 2>&1
if intcmp %ERRORLEVEL%==0;set ARCH=ppc
cl /? 2>&1 | findstr /C:"Alpha C" >NUL 2>&1
if intcmp %ERRORLEVEL%==0;set ARCH=axp
cl /? 2>&1 | findstr /R /C:"Alpha C.*13.00" >NUL 2>&1
if intcmp %ERRORLEVEL%==0;set ARCH=axp64
cl /? 2>&1 | findstr /C:"for Itanium" >NUL 2>&1
if intcmp %ERRORLEVEL%==0;set ARCH=ia64

REM
REM For the original NT 3.x architectures, use static fdi.lib since
REM cabinet.dll won't be present.  For the newer 2000 and above architectures,
REM there's no point.
REM

set FDI=0
if strcmp -i %ARCH%==win32;set FDI=1
if strcmp -i %ARCH%==mips;set FDI=1
if strcmp -i %ARCH%==ppc;set FDI=1
if strcmp -i %ARCH%==axp;set FDI=1

REM 
REM Set build ID.  For release builds, this needs to be zero.
REM

set BLDID=
if strcmp -i %1%!=official;set BLDID=`date`;set BLDID=0
if strcmp %BLDID%==0;echo Building OFFICIAL build;echo Building DAILY %ARCH% build

REM
REM Extract Yori version from ver.mk and generate string containing the
REM version
REM

set YORI_VER_MAJOR=`findstr YORI_BASE_VER_MAJOR= ..\config\ver.mk|cut -d = -f 1`
set YORI_VER_MINOR=`findstr YORI_BASE_VER_MINOR= ..\config\ver.mk|cut -d = -f 1`
if strcmp %BLDID%==0; set BUILDSTRING=%YORI_VER_MAJOR%.%YORI_VER_MINOR%; set BUILDSTRING=%YORI_VER_MAJOR%.%YORI_VER_MINOR%.%BLDID%

set OUTDIR=%CD%\out

echo *** Cleaning tree
pushd ..
ymake clean >NUL
popd

mkdir %OUTDIR% >NUL 2>&1

echo *** Building %ARCH% debug
ymake -f ..\Makefile -m DEBUG=1 YORI_BUILD_ID=%BLDID% FDI=%FDI% .
if intcmp %ERRORLEVEL%!=0; goto exit

echo *** Cleaning tree
pushd ..
ymake clean >NUL
popd

echo *** Building %ARCH% retail
ymake -f ..\Makefile -m YORI_BUILD_ID=%BLDID% FDI=%FDI% .
if intcmp %ERRORLEVEL%!=0; goto exit

REM
REM Generate pkglist.ini so that tools can find packages provided by this
REM directory
REM

set BINPKGS=yori-modular yori-core yori-typical yori-extra yori-ypm yori-one
for %%i in (%BINPKGS%) do bld-pkglist %%i %ARCH% ^& bld-pkglist %%i-pdb %ARCH% ^& bld-pkglist %%i-dbg %ARCH% ^& bld-pkglist %%i-dbg-pdb %ARCH%
bld-pkglist yori-completion noarch
bld-pkglist yori-source noarch

echo *** Cleaning tree

pushd ..
ymake clean >NUL
popd

:exit

endlocal
